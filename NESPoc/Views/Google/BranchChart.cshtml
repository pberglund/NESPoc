<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="~/Scripts/GoogleHelpers.js"></script>
<script type="text/javascript">

    var barObj = null;


    // Load the Visualization API and the corechart package.
    google.charts.load('current', { 'packages': ['corechart'] });

    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        
        var chartOptions = [
            {
                method: "MidwestData",
                type: 2,
                mainManipulation: function(obj) {

                    var d = obj.data;
                    var massagedData = [];

                    massagedData.push([
                        "Branch",
                        "Current Year", { type: 'string', role: 'annotation' },
                        "Previous Year", { type: 'string', role: 'annotation' }
                    ]);

                    $("#companyName").html(d.CompanyName);

                    var totalMin = 0;
                    var totalMax = 0;

                    for (var j = 0; j < d.BranchRecords.length; j++) {

                        var branch = d.BranchRecords[j].BranchName;
                        var currYearVal = d.BranchRecords[j].CurrentYearRevenue;
                        var prevYearVal = d.BranchRecords[j].PreviousYearRevenue;

                        totalMin = Math.min(totalMin, currYearVal, prevYearVal);
                        totalMax = Math.max(totalMax, currYearVal, prevYearVal);

                        var currAnnotation = null;
                        var prevAnnotation = null;
                        if (currYearVal > 0) {
                            currAnnotation = formatCurrencyValue(currYearVal);
                        }

                        if (prevYearVal > 0) {
                            prevAnnotation = formatCurrencyValue(prevYearVal);
                        }
                        massagedData.push([branch, currYearVal, currAnnotation, prevYearVal, prevAnnotation]);
                    }

                    var data = createDataTable(massagedData);
                    return {
                        dataTables: [data],
                        totalMin: totalMin,
                        totalMax: totalMax,
                    }
                },
                postProcessing: function(obj) {
                    var dataTable = obj.dataTables[0];
                    formatCurrency(dataTable, 1);
                    formatCurrency(dataTable, 3);

                    var chartObj = {
                        chartType: "BarChart",
                        elementId: "bar_chart_div",
                        data: dataTable,
                        options: {
                            legend: { position: 'top' },
                            width: '100%',
                            height: '100%',
                            orientation: "horizontal",
                            vAxis: {
                                format: 'currency',
                                minValue: obj.totalMin,
                                maxValue: obj.totalMax,
                            },
                            colors: ["blue", "red"],
                        },
                    }

                    return [chartObj];
                }
            }
        ];


        ConfigureCharts(chartOptions);
    }
</script>


<div class="row">
    <div class="col-md-12">
        <h3 id="companyName"></h3>
        <div class="chart_wrap">
            <div id="bar_chart_div" class="chart"></div>
        </div>
    </div>
</div>
